import 'dart:convert';
import 'dart:io';
import 'package:faker/faker.dart';
import 'package:http/http.dart' as http;

const String pocketbaseUrl = 'http://127.0.0.1:8090';

// ‚úÖ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏û‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÅ‡∏≠‡∏õ
final List<String> categories = [
  '‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
  '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°',
  '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå',
  '‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô',
  '‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤',
  '‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô',
  '‡∏≠‡∏∑‡πà‡∏ô ‡πÜ',
];

Future<void> generateFakeProducts() async {
  final faker = Faker();

  for (int i = 0; i < 20; i++) {
    try {
      // ‚úÖ ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      final randomCategory =
          categories[faker.randomGenerator.integer(categories.length - 1)];
      final randomPrice =
          faker.randomGenerator.integer(500, min: 10).toDouble();
      final randomQuantity = faker.randomGenerator.integer(100, min: 1);
      final name = faker.food.dish();

      // ‚úÖ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏™‡∏∏‡πà‡∏°‡∏à‡∏≤‡∏Å Picsum
      final imageUrl = 'https://picsum.photos/seed/${DateTime.now().millisecondsSinceEpoch}/400';
      final imgResponse = await http.get(Uri.parse(imageUrl));

      if (imgResponse.statusCode != 200) {
        print('‚ö†Ô∏è Failed to fetch random image');
        continue;
      }

      // ‚úÖ ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß (‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö multipart)
      final file = File('temp_image_${i + 1}.jpg');
      await file.writeAsBytes(imgResponse.bodyBytes);

      // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á multipart request ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      final uri = Uri.parse('$pocketbaseUrl/api/collections/products/records');
      final request = http.MultipartRequest('POST', uri)
        ..fields['name'] = name
        ..fields['category'] = randomCategory
        ..fields['price'] = randomPrice.toString()
        ..fields['quantity'] = randomQuantity.toString()
        ..files.add(await http.MultipartFile.fromPath('image', file.path));

      final response = await request.send();
      final resBody = await response.stream.bytesToString();

      if (response.statusCode == 200 || response.statusCode == 201) {
        final product = jsonDecode(resBody);
        print('‚úÖ Created: ${product["name"]} (${product["id"]})');
      } else {
        print('‚ùå Error ${response.statusCode}: $resBody');
      }

      // ‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
      await file.delete();
    } catch (e) {
      print('‚ùå Exception: $e');
    }
  }

  print('üéâ Fake products with images created successfully!');
}

void main() => generateFakeProducts();
